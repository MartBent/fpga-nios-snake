// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/12/2022 20:08:14"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          niosdisplay
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module niosdisplay_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [3:0] btn;
reg clk;
reg key;
// wires                                               
wire [7:0] blue;
wire [7:0] green;
wire h_sync;
wire n_blank;
wire n_sync;
wire [16:0] out_frame_buf_addr;
wire [31:0] out_mem_data;
wire pixel_clk;
wire [7:0] red;
wire v_sync;

// assign statements (if any)                          
niosdisplay i1 (
// port map - connection between master ports and signals/registers   
	.blue(blue),
	.btn(btn),
	.clk(clk),
	.green(green),
	.h_sync(h_sync),
	.key(key),
	.n_blank(n_blank),
	.n_sync(n_sync),
	.out_frame_buf_addr(out_frame_buf_addr),
	.out_mem_data(out_mem_data),
	.pixel_clk(pixel_clk),
	.red(red),
	.v_sync(v_sync)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	#10000;
end 
endmodule

